---
# file: roles/webserver/tasks/main.yml

- name:
  include: '../../../globals.yml'

- name: Install packages for webserver
  apt: name={{ item }} state=present force=yes
  with_items:
    - apache2
    - apache2-utils
    - libapache2-mod-wsgi
  when: has_network_access

- name: Regenerate self-signed SSL cert with current hostname
  shell: /usr/sbin/TSmake-ssl-cert generate-default-snakeoil --force-overwrite
  ignore_errors: True

- name: Install additional apache packages for 18.04
  apt: name={{ item }} state=present force=yes
  with_items:
    - libapache2-mod-php
  when: ansible_distribution_version == "18.04" and has_network_access
  notify: restart apache

- name: Install additional apache packages for 14.04
  apt: name={{ item }} state=present force=yes
  with_items:
    - apache2-mpm-prefork
    - libapache2-mod-php5
  when: ansible_distribution_version == "14.04" and has_network_access
  notify: restart apache

- name: Install php configuration for 18.04 (php7.2)
  template:
    src: php.conf.j2
    dest: /etc/apache2/mods-available/php7.2.conf
    mode: 0644
    owner: root
    group: root
  when: ansible_distribution_version == "18.04"
  notify: restart apache

- name: Install php configuration for 14.04 (php5)
  template:
    src: php.conf.j2
    dest: /etc/apache2/mods-available/php5.conf
    mode: 0644
    owner: root
    group: root
  when: ansible_distribution_version == "14.04"
  notify: restart apache

- name: Modify apache2 logfile rotation criteria - keep 10 logs
  lineinfile: dest={{ configfile }}
                state=present
                insertafter="(.*){$"
                line="        rotate 10"
                regexp="(\s+)rotate(.*)$"
  
- name: Modify apache2 logfile rotation criteria - compress immediately
  lineinfile: dest={{ configfile }}
                state=present
                insertafter="(.*){$"
                regexp='(\s+)?delaycompress'
                line='        nodelaycompress'
  
- name: Add daily
  lineinfile: dest={{ configfile }}
                state=present
                insertafter="(.*){$"
                line='        daily'
                
- name: Remove weekly
  lineinfile: dest={{ configfile }}
                state=absent
                regexp='^.*weekly$'
  
- name: Ensure a line is available
  lineinfile: dest={{ configfile }}
                state=present
                insertafter="(.*){$"
                line="        size 50M"

- name: Run logrotate once per hour
  copy: src=/etc/cron.daily/logrotate dest=/etc/cron.hourly/logrotate force=no
  
- name: Disable conflicting apache modules - gnutls
  shell: /usr/sbin/a2dismod gnutls
  ignore_errors: yes
  
- name: Enable required apache modules
  shell: /usr/sbin/a2enmod wsgi headers ssl setenvif deflate filter expires rewrite include
  notify: restart apache
